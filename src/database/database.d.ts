/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type ArrayType<T> =
  ArrayTypeImpl<T> extends (infer U)[] ? U[] : ArrayTypeImpl<T>;

export type ArrayTypeImpl<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S[], I[], U[]>
    : T[];

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserRole = 'admin' | 'doctor' | 'patient' | 'super_admin';

export interface Users {
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  password: string;
  role: ArrayType<UserRole>;
  updated_at: Generated<Timestamp>;
  username: string;
}

export interface DB {
  users: Users;
}
